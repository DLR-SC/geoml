name: "MacOS Build"

description: "Build geoml on MacOS with clang"

inputs:

  config:
    description: "Configuration to build (Release or Debug, see CMAKE_BUILD_TYPE)"
    required: true
    default: "Release"

  geoml_nightly:
    description: "CMake option to amend the version with the git hash (ON or OFF)"
    required: true
    default: "ON"

  # geoml_bindings-python-internal:
  #   description: "CMake option to build the internal python API"
  #   required: false
  #   default: "OFF"

  # geoml_enable_coverage:
  #   description: "CMake option to enable code coverage with gcov/lcov (ON or OFF)"
  #   required: false
  #   default: "OFF"

  package-artifact:
    description: "Name of the package artifact. Leave empty to skip package generation."
    required: false
    default: ''

  build-artifact:
    descpription: "Set the name for the build artifact stored by this job"
    required: true

runs:

  using: "composite"

  steps:

    - name: Install dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: |
          curl --retry 3 -o sshpass-macOS.tar.gz -L https://sourceforge.net/projects/geoml/files/Thirdparty/sshpass-macOS.tar.gz
          tar xf sshpass-macOS.tar.gz -C /tmp
          echo "/tmp" >> $GITHUB_PATH
          echo "CXXFLAGS=-fvisibility-inlines-hidden" >> $GITHUB_ENV
          
    - name: Setup miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: geoml-bld
        environment-file: environment.yml
        auto-activate-base: false

    - name: Conda info
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: compiler-cache-${{ inputs.build-artifact }}

    - name: Build geoml
      shell: bash -l {0}
      run: |
        mkdir build
        cd build
        cmake .. -GNinja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                         -DCMAKE_BUILD_TYPE=${{ inputs.config }} \
                         -DCMAKE_INSTALL_PREFIX=install \
                         -DGEOML_BUILD_TESTS=ON 
        cmake --build . -j 4 --target install

    - name: Create package
      if: ${{ inputs.package-artifact }}
      shell: bash
      run: |
        cd build
        cmake --build . --target doc
        cmake --build . --target package

    - name: Upload package as artifact
      if: ${{ inputs.package-artifact }}
      uses: actions/upload-artifact@v4
      with:
       name: ${{ inputs.package-artifact }}
       path: build/*.dmg

    - name: create build dir archive
      shell: bash
      run: |
        gtar -czf build.tar.gz build

    - name: Upload build directory
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.build-artifact }}
        path: build.tar.gz
        retention-days: 1
