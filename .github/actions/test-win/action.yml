name: "Windows Tests"

description: "Test geoml on Windows"

inputs:

  build-artifact:
    description: "Name of the build artifact that contains the unit test binary."
    required: true

  unit-tests:
    description: "Set to true to run geomls unit tests (true or false)"
    required: false
    default: true

  api-tests:
    description: "Set to true to run geoml'a api tests (true or false)"
    required: false
    default: true

  # integration-tests:
  #   description: "Set to true to run geomls integration tests (true or false)"
  #   required: false
  #   default: true

runs:

  using: "composite"

  steps:

    - name: Setup miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: geoml-bld
        environment-file: environment.yml
        auto-activate-base: false

    - name: Install dependencies (static opencascade)
      if: inputs.oce_static_libs == 'ON'
      shell: cmd /C call {0}
      run: |
        conda install opencascade-static=7.4.0 tbb-devel freetype-static=2.6 freeimageplus-static -c dlr-sc -c dlr-sc/label/geoml-dev
    
    - name: Conda info
      shell: cmd /C call {0}
      run: |
        conda info
        conda list

    - name: Download built test directory
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.build-artifact }}
    - name: extract build archive
      shell: bash
      run: |
        tar -xzf build.tar.gz

    - name: Run unit tests
      if: ${{ inputs.unit-tests == 'true' }}
      shell: cmd /C call {0}
      run: |
        set PATH=%cd%\build\install\bin;%PATH%
        cd build
        cmake --build . 
        cd tests\unittests
        .\geoml-unittests.exe --gtest_shuffle --gtest_output=xml:unit_test_results.xml

    - name: Run api tests
      if: ${{ inputs.api-tests == 'true' }}         
      shell: cmd /C call {0}
      run: |
        set PATH=%cd%\build\install\bin;%PATH%
        cd build\tests\apitests
        .\geoml-apitest.exe --gtest_shuffle --gtest_output=xml:api_test_results.xml

    # - name: Run integration tests
    #   if: ${{ inputs.integration-tests == 'true' }}
    #   shell: cmd /C call {0}
    #   run: |
    #     set PATH=%cd%\build\install\bin;%PATH%
    #     cd build\tests\integrationtests
    #     .\geoml-integrationtests --gtest_shuffle --gtest_output=xml:integration_test_results.xml
